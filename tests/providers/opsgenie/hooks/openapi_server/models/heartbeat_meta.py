# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class HeartbeatMeta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, enabled=None, expired=None):  # noqa: E501
        """HeartbeatMeta - a model defined in OpenAPI

        :param name: The name of this HeartbeatMeta.  # noqa: E501
        :type name: str
        :param enabled: The enabled of this HeartbeatMeta.  # noqa: E501
        :type enabled: bool
        :param expired: The expired of this HeartbeatMeta.  # noqa: E501
        :type expired: bool
        """
        self.openapi_types = {
            'name': str,
            'enabled': bool,
            'expired': bool
        }

        self.attribute_map = {
            'name': 'name',
            'enabled': 'enabled',
            'expired': 'expired'
        }

        self._name = name
        self._enabled = enabled
        self._expired = expired

    @classmethod
    def from_dict(cls, dikt) -> 'HeartbeatMeta':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HeartbeatMeta of this HeartbeatMeta.  # noqa: E501
        :rtype: HeartbeatMeta
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this HeartbeatMeta.


        :return: The name of this HeartbeatMeta.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this HeartbeatMeta.


        :param name: The name of this HeartbeatMeta.
        :type name: str
        """

        self._name = name

    @property
    def enabled(self):
        """Gets the enabled of this HeartbeatMeta.


        :return: The enabled of this HeartbeatMeta.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this HeartbeatMeta.


        :param enabled: The enabled of this HeartbeatMeta.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def expired(self):
        """Gets the expired of this HeartbeatMeta.


        :return: The expired of this HeartbeatMeta.
        :rtype: bool
        """
        return self._expired

    @expired.setter
    def expired(self, expired):
        """Sets the expired of this HeartbeatMeta.


        :param expired: The expired of this HeartbeatMeta.
        :type expired: bool
        """

        self._expired = expired
