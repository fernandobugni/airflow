# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.time_of_day_restriction import TimeOfDayRestriction
from openapi_server import util

from openapi_server.models.time_of_day_restriction import TimeOfDayRestriction  # noqa: E501

class TimeOfDayRestrictionIntervalAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, restriction=None):  # noqa: E501
        """TimeOfDayRestrictionIntervalAllOf - a model defined in OpenAPI

        :param restriction: The restriction of this TimeOfDayRestrictionIntervalAllOf.  # noqa: E501
        :type restriction: TimeOfDayRestriction
        """
        self.openapi_types = {
            'restriction': TimeOfDayRestriction
        }

        self.attribute_map = {
            'restriction': 'restriction'
        }

        self._restriction = restriction

    @classmethod
    def from_dict(cls, dikt) -> 'TimeOfDayRestrictionIntervalAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TimeOfDayRestrictionInterval_allOf of this TimeOfDayRestrictionIntervalAllOf.  # noqa: E501
        :rtype: TimeOfDayRestrictionIntervalAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def restriction(self):
        """Gets the restriction of this TimeOfDayRestrictionIntervalAllOf.


        :return: The restriction of this TimeOfDayRestrictionIntervalAllOf.
        :rtype: TimeOfDayRestriction
        """
        return self._restriction

    @restriction.setter
    def restriction(self, restriction):
        """Sets the restriction of this TimeOfDayRestrictionIntervalAllOf.


        :param restriction: The restriction of this TimeOfDayRestrictionIntervalAllOf.
        :type restriction: TimeOfDayRestriction
        """

        self._restriction = restriction
