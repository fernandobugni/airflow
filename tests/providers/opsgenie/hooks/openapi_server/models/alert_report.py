# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class AlertReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ack_time=None, close_time=None, acknowledged_by=None, closed_by=None):  # noqa: E501
        """AlertReport - a model defined in OpenAPI

        :param ack_time: The ack_time of this AlertReport.  # noqa: E501
        :type ack_time: int
        :param close_time: The close_time of this AlertReport.  # noqa: E501
        :type close_time: int
        :param acknowledged_by: The acknowledged_by of this AlertReport.  # noqa: E501
        :type acknowledged_by: str
        :param closed_by: The closed_by of this AlertReport.  # noqa: E501
        :type closed_by: str
        """
        self.openapi_types = {
            'ack_time': int,
            'close_time': int,
            'acknowledged_by': str,
            'closed_by': str
        }

        self.attribute_map = {
            'ack_time': 'ackTime',
            'close_time': 'closeTime',
            'acknowledged_by': 'acknowledgedBy',
            'closed_by': 'closedBy'
        }

        self._ack_time = ack_time
        self._close_time = close_time
        self._acknowledged_by = acknowledged_by
        self._closed_by = closed_by

    @classmethod
    def from_dict(cls, dikt) -> 'AlertReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AlertReport of this AlertReport.  # noqa: E501
        :rtype: AlertReport
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ack_time(self):
        """Gets the ack_time of this AlertReport.


        :return: The ack_time of this AlertReport.
        :rtype: int
        """
        return self._ack_time

    @ack_time.setter
    def ack_time(self, ack_time):
        """Sets the ack_time of this AlertReport.


        :param ack_time: The ack_time of this AlertReport.
        :type ack_time: int
        """

        self._ack_time = ack_time

    @property
    def close_time(self):
        """Gets the close_time of this AlertReport.


        :return: The close_time of this AlertReport.
        :rtype: int
        """
        return self._close_time

    @close_time.setter
    def close_time(self, close_time):
        """Sets the close_time of this AlertReport.


        :param close_time: The close_time of this AlertReport.
        :type close_time: int
        """

        self._close_time = close_time

    @property
    def acknowledged_by(self):
        """Gets the acknowledged_by of this AlertReport.


        :return: The acknowledged_by of this AlertReport.
        :rtype: str
        """
        return self._acknowledged_by

    @acknowledged_by.setter
    def acknowledged_by(self, acknowledged_by):
        """Sets the acknowledged_by of this AlertReport.


        :param acknowledged_by: The acknowledged_by of this AlertReport.
        :type acknowledged_by: str
        """

        self._acknowledged_by = acknowledged_by

    @property
    def closed_by(self):
        """Gets the closed_by of this AlertReport.


        :return: The closed_by of this AlertReport.
        :rtype: str
        """
        return self._closed_by

    @closed_by.setter
    def closed_by(self, closed_by):
        """Sets the closed_by of this AlertReport.


        :param closed_by: The closed_by of this AlertReport.
        :type closed_by: str
        """

        self._closed_by = closed_by
