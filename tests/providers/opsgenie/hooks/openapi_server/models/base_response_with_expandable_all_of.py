# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class BaseResponseWithExpandableAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expandable=None):  # noqa: E501
        """BaseResponseWithExpandableAllOf - a model defined in OpenAPI

        :param expandable: The expandable of this BaseResponseWithExpandableAllOf.  # noqa: E501
        :type expandable: List[str]
        """
        self.openapi_types = {
            'expandable': List[str]
        }

        self.attribute_map = {
            'expandable': 'expandable'
        }

        self._expandable = expandable

    @classmethod
    def from_dict(cls, dikt) -> 'BaseResponseWithExpandableAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BaseResponseWithExpandable_allOf of this BaseResponseWithExpandableAllOf.  # noqa: E501
        :rtype: BaseResponseWithExpandableAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expandable(self):
        """Gets the expandable of this BaseResponseWithExpandableAllOf.


        :return: The expandable of this BaseResponseWithExpandableAllOf.
        :rtype: List[str]
        """
        return self._expandable

    @expandable.setter
    def expandable(self, expandable):
        """Sets the expandable of this BaseResponseWithExpandableAllOf.


        :param expandable: The expandable of this BaseResponseWithExpandableAllOf.
        :type expandable: List[str]
        """

        self._expandable = expandable
