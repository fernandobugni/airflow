# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class AlertAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actions=None, entity=None, description=None, details=None):  # noqa: E501
        """AlertAllOf - a model defined in OpenAPI

        :param actions: The actions of this AlertAllOf.  # noqa: E501
        :type actions: List[str]
        :param entity: The entity of this AlertAllOf.  # noqa: E501
        :type entity: str
        :param description: The description of this AlertAllOf.  # noqa: E501
        :type description: str
        :param details: The details of this AlertAllOf.  # noqa: E501
        :type details: Dict[str, str]
        """
        self.openapi_types = {
            'actions': List[str],
            'entity': str,
            'description': str,
            'details': Dict[str, str]
        }

        self.attribute_map = {
            'actions': 'actions',
            'entity': 'entity',
            'description': 'description',
            'details': 'details'
        }

        self._actions = actions
        self._entity = entity
        self._description = description
        self._details = details

    @classmethod
    def from_dict(cls, dikt) -> 'AlertAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Alert_allOf of this AlertAllOf.  # noqa: E501
        :rtype: AlertAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actions(self):
        """Gets the actions of this AlertAllOf.


        :return: The actions of this AlertAllOf.
        :rtype: List[str]
        """
        return self._actions

    @actions.setter
    def actions(self, actions):
        """Sets the actions of this AlertAllOf.


        :param actions: The actions of this AlertAllOf.
        :type actions: List[str]
        """

        self._actions = actions

    @property
    def entity(self):
        """Gets the entity of this AlertAllOf.


        :return: The entity of this AlertAllOf.
        :rtype: str
        """
        return self._entity

    @entity.setter
    def entity(self, entity):
        """Sets the entity of this AlertAllOf.


        :param entity: The entity of this AlertAllOf.
        :type entity: str
        """

        self._entity = entity

    @property
    def description(self):
        """Gets the description of this AlertAllOf.


        :return: The description of this AlertAllOf.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AlertAllOf.


        :param description: The description of this AlertAllOf.
        :type description: str
        """

        self._description = description

    @property
    def details(self):
        """Gets the details of this AlertAllOf.


        :return: The details of this AlertAllOf.
        :rtype: Dict[str, str]
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this AlertAllOf.


        :param details: The details of this AlertAllOf.
        :type details: Dict[str, str]
        """

        self._details = details
