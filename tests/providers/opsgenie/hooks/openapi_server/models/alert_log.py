# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class AlertLog(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, log=None, type=None, owner=None, created_at=None, offset=None):  # noqa: E501
        """AlertLog - a model defined in OpenAPI

        :param log: The log of this AlertLog.  # noqa: E501
        :type log: str
        :param type: The type of this AlertLog.  # noqa: E501
        :type type: str
        :param owner: The owner of this AlertLog.  # noqa: E501
        :type owner: str
        :param created_at: The created_at of this AlertLog.  # noqa: E501
        :type created_at: datetime
        :param offset: The offset of this AlertLog.  # noqa: E501
        :type offset: str
        """
        self.openapi_types = {
            'log': str,
            'type': str,
            'owner': str,
            'created_at': datetime,
            'offset': str
        }

        self.attribute_map = {
            'log': 'log',
            'type': 'type',
            'owner': 'owner',
            'created_at': 'createdAt',
            'offset': 'offset'
        }

        self._log = log
        self._type = type
        self._owner = owner
        self._created_at = created_at
        self._offset = offset

    @classmethod
    def from_dict(cls, dikt) -> 'AlertLog':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AlertLog of this AlertLog.  # noqa: E501
        :rtype: AlertLog
        """
        return util.deserialize_model(dikt, cls)

    @property
    def log(self):
        """Gets the log of this AlertLog.


        :return: The log of this AlertLog.
        :rtype: str
        """
        return self._log

    @log.setter
    def log(self, log):
        """Sets the log of this AlertLog.


        :param log: The log of this AlertLog.
        :type log: str
        """

        self._log = log

    @property
    def type(self):
        """Gets the type of this AlertLog.


        :return: The type of this AlertLog.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AlertLog.


        :param type: The type of this AlertLog.
        :type type: str
        """

        self._type = type

    @property
    def owner(self):
        """Gets the owner of this AlertLog.


        :return: The owner of this AlertLog.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this AlertLog.


        :param owner: The owner of this AlertLog.
        :type owner: str
        """

        self._owner = owner

    @property
    def created_at(self):
        """Gets the created_at of this AlertLog.


        :return: The created_at of this AlertLog.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this AlertLog.


        :param created_at: The created_at of this AlertLog.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def offset(self):
        """Gets the offset of this AlertLog.


        :return: The offset of this AlertLog.
        :rtype: str
        """
        return self._offset

    @offset.setter
    def offset(self, offset):
        """Sets the offset of this AlertLog.


        :param offset: The offset of this AlertLog.
        :type offset: str
        """

        self._offset = offset
