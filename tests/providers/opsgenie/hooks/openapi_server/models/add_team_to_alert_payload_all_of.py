# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.team_recipient import TeamRecipient
from openapi_server import util

from openapi_server.models.team_recipient import TeamRecipient  # noqa: E501

class AddTeamToAlertPayloadAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, team=None):  # noqa: E501
        """AddTeamToAlertPayloadAllOf - a model defined in OpenAPI

        :param team: The team of this AddTeamToAlertPayloadAllOf.  # noqa: E501
        :type team: TeamRecipient
        """
        self.openapi_types = {
            'team': TeamRecipient
        }

        self.attribute_map = {
            'team': 'team'
        }

        self._team = team

    @classmethod
    def from_dict(cls, dikt) -> 'AddTeamToAlertPayloadAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AddTeamToAlertPayload_allOf of this AddTeamToAlertPayloadAllOf.  # noqa: E501
        :rtype: AddTeamToAlertPayloadAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def team(self):
        """Gets the team of this AddTeamToAlertPayloadAllOf.


        :return: The team of this AddTeamToAlertPayloadAllOf.
        :rtype: TeamRecipient
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this AddTeamToAlertPayloadAllOf.


        :param team: The team of this AddTeamToAlertPayloadAllOf.
        :type team: TeamRecipient
        """
        if team is None:
            raise ValueError("Invalid value for `team`, must not be `None`")  # noqa: E501

        self._team = team
