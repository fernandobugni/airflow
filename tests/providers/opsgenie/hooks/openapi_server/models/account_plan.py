# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class AccountPlan(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_user_count=None, name=None, is_yearly=None):  # noqa: E501
        """AccountPlan - a model defined in OpenAPI

        :param max_user_count: The max_user_count of this AccountPlan.  # noqa: E501
        :type max_user_count: int
        :param name: The name of this AccountPlan.  # noqa: E501
        :type name: str
        :param is_yearly: The is_yearly of this AccountPlan.  # noqa: E501
        :type is_yearly: bool
        """
        self.openapi_types = {
            'max_user_count': int,
            'name': str,
            'is_yearly': bool
        }

        self.attribute_map = {
            'max_user_count': 'maxUserCount',
            'name': 'name',
            'is_yearly': 'isYearly'
        }

        self._max_user_count = max_user_count
        self._name = name
        self._is_yearly = is_yearly

    @classmethod
    def from_dict(cls, dikt) -> 'AccountPlan':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AccountPlan of this AccountPlan.  # noqa: E501
        :rtype: AccountPlan
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_user_count(self):
        """Gets the max_user_count of this AccountPlan.


        :return: The max_user_count of this AccountPlan.
        :rtype: int
        """
        return self._max_user_count

    @max_user_count.setter
    def max_user_count(self, max_user_count):
        """Sets the max_user_count of this AccountPlan.


        :param max_user_count: The max_user_count of this AccountPlan.
        :type max_user_count: int
        """

        self._max_user_count = max_user_count

    @property
    def name(self):
        """Gets the name of this AccountPlan.


        :return: The name of this AccountPlan.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AccountPlan.


        :param name: The name of this AccountPlan.
        :type name: str
        """

        self._name = name

    @property
    def is_yearly(self):
        """Gets the is_yearly of this AccountPlan.


        :return: The is_yearly of this AccountPlan.
        :rtype: bool
        """
        return self._is_yearly

    @is_yearly.setter
    def is_yearly(self, is_yearly):
        """Sets the is_yearly of this AccountPlan.


        :param is_yearly: The is_yearly of this AccountPlan.
        :type is_yearly: bool
        """

        self._is_yearly = is_yearly
